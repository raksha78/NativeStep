resources:
  - name: gradle_repository
    type: GitRepo
    configuration:
      gitProvider: raksha78_github
      path: raksha78/project-examples
      
  - name: gradle_rak
    type: BuildInfo
    configuration:
      sourceArtifactory: art_v
      buildName: build_rak
      buildNumber: 9
           
  - name: fileSpec_gradle
    type: FileSpec
    configuration:     
      sourceArtifactory: art_v
      pattern: "fileSpec_test/install.sh"
 
      
pipelines:
  - name: gradle_pipeline
    steps:
      - name: gradle_build_step
        type: GradleBuild
        configuration:
          sourceLocation: gradle-examples/gradle-jcenter-resolve
          gradleCommand:  clean artifactoryPublish -b build.gradle
#           gradleCommand: build.gradle
          configFileLocation: .
#           autoPublishBuildInfo: true
          configFileName: gradle-art-config
#           resolverRepo: jcenter
#           deployerRepo: gradle-local
          inputResources:
            - name: gradle_repository
#             - name: fileSpec_gradle
          integrations:
            - name: art_v
#           outputResources:
#             - name: gradle_rak
        execution:
          onStart:
            - javac -version
            - gradle --version
#           onComplete:
#             - cd dependencyState/resources/fileSpec_gradle
#             - ls .

            
            
#       - name: gradle_publish
#         type: PublishBuildInfo
        
#         configuration:
#           environmentVariables: # optional
#             JFROG_CLI_BUILD_NAME: "rak_test"
#             JFROG_CLI_BUILD_NUMBER: 28
# #           envInclude: buildinfo.env.*  # optional 
# #           envExclude: buildinfo.env.* # optional
# #           forceXrayScan: <boolean/string>  # optional, defaults to false
# #           failOnScan: <boolean/string>   # optional, defaults to true

#           inputSteps:
#             - name: gradle_build_step  
#           outputResources:
#             - name: gradle_rak  # required BuildInfo resource  

        
    
